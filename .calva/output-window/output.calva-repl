; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj::user=> 

; Jack-in done.
clj::user=> 
#<CruxNode>
clj::user=> 
#'user/crux
clj::user=> 
#'user/manifest
clj::user=> 
#:crux.tx{:tx-id 0, :tx-time #inst "2020-11-08T04:14:09.344-00:00"}
clj::user=> 
{:crux.db/id :manifest, :pilot-name "Johanna", :id/rocket "SB002-sol", :id/employee "22910x2", :badges "SETUP", :cargo ["stereo" "gold fish" "slippers" "secret note"]}
clj::user=> 
:manifes
clj::user=> 
:manifest
clj::user=> 
nil
clj::user=> 
{:crux.db/id :manifest, :pilot-name "Johanna", :id/rocket "SB002-sol", :id/employee "22910x2", :badges "SETUP", :cargo ["stereo" "gold fish" "slippers" "secret note"]}
clj::user=> 
#:crux.tx{:tx-id 1, :tx-time #inst "2020-11-08T04:43:54.463-00:00"}
clj::user=> 
#:crux.tx{:tx-id 2, :tx-time #inst "2020-11-08T04:44:09.479-00:00"}
clj::user=> 
#:crux.tx{:tx-id 3, :tx-time #inst "2020-11-08T04:50:15.657-00:00"}
clj::user=> 
#:crux.tx{:tx-id 4, :tx-time #inst "2020-11-08T04:51:27.093-00:00"}
clj::user=> 
{:crux.db/id :stock/Pu, :commod :commodity/Pu, :weight-ton 21}
clj::user=> 
{:crux.db/id :stock/Pu, :commod :commodity/Pu, :weight-ton 22.2}
clj::user=> 
{:crux.db/id :stock/Pu, :commod :commodity/Pu, :weight-ton 23}
clj::user=> 
#'user/easy-ingest
clj::user=> 
#:crux.tx{:tx-id 5, :tx-time #inst "2020-11-08T05:03:41.622-00:00"}
clj::user=> 
